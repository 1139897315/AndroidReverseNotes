package com.tencent.p177mm.boot.svg.p708a.p709a;

import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Paint.Cap;
import android.graphics.Paint.Join;
import android.graphics.Paint.Style;
import android.graphics.Path;
import android.os.Looper;
import com.tencent.p177mm.svg.C5163c;
import com.tencent.p177mm.svg.WeChatSVGRenderC2Java;
import com.tencent.smtt.sdk.WebView;

/* renamed from: com.tencent.mm.boot.svg.a.a.acu */
public final class acu extends C5163c {
    private final int height = 72;
    private final int width = 72;

    /* renamed from: a */
    public final int mo10620a(int i, Object... objArr) {
        switch (i) {
            case 0:
                return 72;
            case 1:
                return 72;
            case 2:
                Canvas canvas = (Canvas) objArr[0];
                Looper looper = (Looper) objArr[1];
                Matrix h = C5163c.m7881h(looper);
                float[] g = C5163c.m7880g(looper);
                Paint k = C5163c.m7883k(looper);
                k.setFlags(385);
                k.setStyle(Style.FILL);
                Paint k2 = C5163c.m7883k(looper);
                k2.setFlags(385);
                k2.setStyle(Style.STROKE);
                k.setColor(WebView.NIGHT_MODE_COLOR);
                k2.setStrokeWidth(1.0f);
                k2.setStrokeCap(Cap.BUTT);
                k2.setStrokeJoin(Join.MITER);
                k2.setStrokeMiter(4.0f);
                k2.setPathEffect(null);
                C5163c.m7876a(k2, looper).setStrokeWidth(1.0f);
                Paint a = C5163c.m7876a(k, looper);
                a.setColor(WebView.NIGHT_MODE_COLOR);
                canvas.save();
                float[] a2 = C5163c.m7878a(g, 1.0f, 0.0f, 4.5f, 0.0f, 1.0f, 6.0f);
                h.reset();
                h.setValues(a2);
                canvas.concat(h);
                canvas.save();
                Paint a3 = C5163c.m7876a(a, looper);
                Path l = C5163c.m7884l(looper);
                l.moveTo(46.22886f, 39.75217f);
                l.lineTo(57.01254f, 43.80211f);
                l.cubicTo(58.980694f, 44.63354f, 60.261246f, 46.51024f, 60.40459f, 48.661503f);
                l.cubicTo(60.420963f, 48.857704f, 60.420868f, 49.053158f, 60.40701f, 49.248974f);
                l.cubicTo(60.37849f, 49.651924f, 60.295635f, 50.034782f, 60.175026f, 50.421837f);
                l.cubicTo(60.113873f, 50.61808f, 60.043068f, 50.811737f, 60.000515f, 50.92317f);
                l.cubicTo(57.96777f, 56.448444f, 52.743507f, 60.187923f, 46.78856f, 60.187923f);
                l.cubicTo(45.420162f, 60.187923f, 43.99217f, 59.950283f, 43.170025f, 59.71261f);
                l.cubicTo(33.07302f, 57.408188f, 23.884508f, 52.274864f, 16.56704f, 44.968384f);
                l.cubicTo(9.249243f, 37.661575f, 4.107736f, 28.48603f, 1.7677788f, 18.231745f);
                l.cubicTo(1.7709881f, 18.254175f, 1.636847f, 17.626104f, 1.5721654f, 17.275263f);
                l.cubicTo(1.414704f, 16.421171f, 1.3233051f, 15.608054f, 1.3233051f, 14.787783f);
                l.cubicTo(1.3233051f, 8.838872f, 5.0692034f, 3.6213472f, 10.661819f, 1.5710254f);
                l.cubicTo(10.815471f, 1.5179147f, 10.99734f, 1.459445f, 11.215516f, 1.4001756f);
                l.cubicTo(11.543273f, 1.3111373f, 11.868964f, 1.2444949f, 12.199514f, 1.2089506f);
                l.cubicTo(12.363703f, 1.1912954f, 12.526502f, 1.1817796f, 12.75884f, 1.1829419f);
                l.cubicTo(14.968856f, 1.2564985f, 16.883158f, 2.5377858f, 17.758429f, 4.607925f);
                l.lineTo(21.76432f, 15.243251f);
                l.cubicTo(22.174992f, 16.370901f, 22.02397f, 17.225407f, 21.425602f, 18.319908f);
                l.cubicTo(20.350695f, 20.19817f, 18.13567f, 24.28131f, 16.98311f, 26.539143f);
                l.cubicTo(16.811522f, 26.857328f, 16.717373f, 27.220823f, 16.717373f, 27.561794f);
                l.cubicTo(16.717373f, 27.893484f, 16.827755f, 28.266993f, 17.037537f, 28.608128f);
                l.cubicTo(19.116108f, 32.131565f, 21.373028f, 35.14371f, 23.874208f, 37.641243f);
                l.cubicTo(26.34383f, 40.14895f, 29.340273f, 42.39845f, 32.931187f, 44.51092f);
                l.cubicTo(33.258274f, 44.711906f, 33.587967f, 44.810665f, 33.948303f, 44.810665f);
                l.cubicTo(34.317825f, 44.810665f, 34.63733f, 44.72671f, 35.004196f, 44.52973f);
                l.cubicTo(37.08053f, 43.453255f, 40.98824f, 41.339756f, 43.244305f, 40.08834f);
                l.cubicTo(44.298836f, 39.514008f, 45.08466f, 39.37134f, 46.22886f, 39.75217f);
                l.close();
                l.moveTo(36.681084f, 47.71522f);
                l.cubicTo(35.82879f, 48.173462f, 34.92606f, 48.410664f, 33.948303f, 48.410664f);
                l.cubicTo(32.90218f, 48.410664f, 31.924953f, 48.117935f, 31.071325f, 47.593086f);
                l.cubicTo(27.2605f, 45.351727f, 24.016785f, 42.91659f, 21.318104f, 40.176216f);
                l.cubicTo(18.59831f, 37.460506f, 16.161366f, 34.208096f, 13.951854f, 30.462145f);
                l.cubicTo(13.420091f, 29.599327f, 13.1173725f, 28.57499f, 13.1173725f, 27.561794f);
                l.cubicTo(13.1173725f, 26.616503f, 13.363279f, 25.667091f, 13.798601f, 24.860672f);
                l.cubicTo(14.955836f, 22.59247f, 17.198269f, 18.458813f, 18.286577f, 16.557726f);
                l.cubicTo(18.313852f, 16.507795f, 17.022354f, 12.966344f, 14.412085f, 5.933369f);
                l.cubicTo(14.122012f, 5.248772f, 13.464088f, 4.8084083f, 12.688983f, 4.78178f);
                l.cubicTo(12.464445f, 4.8012156f, 12.31752f, 4.8312793f, 12.159285f, 4.8742657f);
                l.cubicTo(12.034602f, 4.9081364f, 11.937806f, 4.939256f, 11.841541f, 4.971815f);
                l.cubicTo(7.7094197f, 6.487458f, 4.923305f, 10.368135f, 4.923305f, 14.787783f);
                l.cubicTo(4.923305f, 15.359447f, 4.991529f, 15.966388f, 5.1125016f, 16.622562f);
                l.cubicTo(5.1574545f, 16.866392f, 5.3138833f, 17.598818f, 5.308789f, 17.599607f);
                l.cubicTo(7.464259f, 27.015633f, 12.268067f, 35.58852f, 19.11071f, 42.420887f);
                l.cubicTo(25.953588f, 49.25349f, 34.53996f, 54.050415f, 44.048798f, 56.222805f);
                l.cubicTo(44.68194f, 56.40343f, 45.79056f, 56.587925f, 46.78856f, 56.587925f);
                l.cubicTo(51.216927f, 56.587925f, 55.104233f, 53.805424f, 56.60685f, 49.72311f);
                l.cubicTo(56.676903f, 49.531948f, 56.70863f, 49.44517f, 56.738026f, 49.350834f);
                l.cubicTo(56.782673f, 49.20756f, 56.80981f, 49.08216f, 56.815994f, 48.994804f);
                l.cubicTo(56.758045f, 48.080116f, 56.3003f, 47.409275f, 55.667988f, 47.140827f);
                l.lineTo(45.09261f, 43.16933f);
                l.cubicTo(42.70743f, 44.502876f, 38.771847f, 46.63145f, 36.681084f, 47.71522f);
                l.close();
                WeChatSVGRenderC2Java.setFillType(l, 1);
                canvas.drawPath(l, a3);
                canvas.restore();
                canvas.save();
                g = C5163c.m7878a(a2, 1.0f, 0.0f, 25.107143f, 0.0f, 1.0f, 0.0f);
                h.reset();
                h.setValues(g);
                canvas.concat(h);
                canvas.save();
                Paint a4 = C5163c.m7876a(a, looper);
                l = C5163c.m7884l(looper);
                l.moveTo(6.213008f, 15.805954f);
                l.cubicTo(5.7608614f, 11.796948f, 6.9431252f, 7.9411287f, 9.672789f, 5.16775f);
                l.cubicTo(14.930721f, -0.19166379f, 24.014297f, 0.3555171f, 30.002613f, 6.229036f);
                l.cubicTo(35.939026f, 12.103612f, 36.63614f, 21.169064f, 31.394089f, 26.512226f);
                l.cubicTo(28.639668f, 29.359013f, 24.681374f, 30.622126f, 20.587873f, 30.15083f);
                l.cubicTo(20.28228f, 30.6213f, 19.929993f, 31.055887f, 19.519777f, 31.465485f);
                l.cubicTo(15.909817f, 35.1292f, 9.687202f, 34.75426f, 5.7060347f, 30.77882f);
                l.cubicTo(1.6477474f, 26.839188f, 1.1649352f, 20.62562f, 4.794327f, 16.942354f);
                l.cubicTo(5.2288585f, 16.508474f, 5.7024174f, 16.129234f, 6.213008f, 15.805954f);
                l.close();
                l.moveTo(18.365063f, 25.962624f);
                l.cubicTo(18.590746f, 24.030882f, 17.812334f, 21.84523f, 16.140818f, 20.205503f);
                l.cubicTo(14.487469f, 18.5836f, 12.348417f, 17.838194f, 10.404866f, 18.042467f);
                l.cubicTo(11.0512f, 19.815674f, 12.129596f, 21.491978f, 13.579116f, 22.939444f);
                l.cubicTo(14.986223f, 24.313217f, 16.642477f, 25.348162f, 18.365063f, 25.962624f);
                l.close();
                l.moveTo(18.661846f, 17.635597f);
                l.cubicTo(21.186472f, 20.112207f, 22.363724f, 23.519043f, 21.9068f, 26.641684f);
                l.cubicTo(24.586773f, 26.728634f, 27.063313f, 25.811007f, 28.815586f, 24.000025f);
                l.cubicTo(32.5943f, 20.148378f, 32.07078f, 13.340383f, 27.476088f, 8.793527f);
                l.cubicTo(22.839022f, 4.2453723f, 16.023672f, 3.834826f, 12.240551f, 7.69096f);
                l.cubicTo(10.504562f, 9.454752f, 9.639986f, 11.871755f, 9.724495f, 14.498878f);
                l.cubicTo(12.827285f, 14.0714f, 16.165052f, 15.186291f, 18.661846f, 17.635597f);
                l.close();
                l.moveTo(11.049835f, 25.50115f);
                l.cubicTo(9.326564f, 23.780466f, 8.011593f, 21.79349f, 7.172034f, 19.668589f);
                l.cubicTo(5.232044f, 21.869429f, 5.5954437f, 25.654177f, 8.231642f, 28.21354f);
                l.cubicTo(10.777556f, 30.755632f, 14.50742f, 31.077387f, 16.696297f, 29.181122f);
                l.cubicTo(14.649492f, 28.37767f, 12.712568f, 27.124603f, 11.049835f, 25.50115f);
                l.close();
                WeChatSVGRenderC2Java.setFillType(l, 1);
                canvas.drawPath(l, a4);
                canvas.restore();
                canvas.restore();
                canvas.restore();
                C5163c.m7882j(looper);
                break;
        }
        return 0;
    }
}
