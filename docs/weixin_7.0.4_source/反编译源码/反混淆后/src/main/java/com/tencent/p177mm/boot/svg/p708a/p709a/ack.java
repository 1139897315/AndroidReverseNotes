package com.tencent.p177mm.boot.svg.p708a.p709a;

import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Paint.Cap;
import android.graphics.Paint.Join;
import android.graphics.Paint.Style;
import android.graphics.Path;
import android.os.Looper;
import com.tencent.p177mm.svg.C5163c;
import com.tencent.p177mm.svg.WeChatSVGRenderC2Java;
import com.tencent.smtt.sdk.WebView;

/* renamed from: com.tencent.mm.boot.svg.a.a.ack */
public final class ack extends C5163c {
    private final int height = 72;
    private final int width = 72;

    /* renamed from: a */
    public final int mo10620a(int i, Object... objArr) {
        switch (i) {
            case 0:
                return 72;
            case 1:
                return 72;
            case 2:
                Canvas canvas = (Canvas) objArr[0];
                Looper looper = (Looper) objArr[1];
                C5163c.m7881h(looper);
                C5163c.m7880g(looper);
                Paint k = C5163c.m7883k(looper);
                k.setFlags(385);
                k.setStyle(Style.FILL);
                Paint k2 = C5163c.m7883k(looper);
                k2.setFlags(385);
                k2.setStyle(Style.STROKE);
                k.setColor(WebView.NIGHT_MODE_COLOR);
                k2.setStrokeWidth(1.0f);
                k2.setStrokeCap(Cap.BUTT);
                k2.setStrokeJoin(Join.MITER);
                k2.setStrokeMiter(4.0f);
                k2.setPathEffect(null);
                C5163c.m7876a(k2, looper).setStrokeWidth(1.0f);
                Paint a = C5163c.m7876a(k, looper);
                a.setColor(WebView.NIGHT_MODE_COLOR);
                canvas.save();
                Paint a2 = C5163c.m7876a(a, looper);
                Path l = C5163c.m7884l(looper);
                l.moveTo(37.000446f, 49.5f);
                l.lineTo(37.255203f, 50.68463f);
                l.cubicTo(38.0449f, 54.356716f, 39.411167f, 57.313705f, 41.473427f, 59.801754f);
                l.cubicTo(42.04582f, 60.660336f, 42.299538f, 61.009205f, 42.55362f, 61.263283f);
                l.cubicTo(44.512356f, 63.22202f, 47.136787f, 64.43025f, 49.732395f, 64.5f);
                l.lineTo(55.102238f, 64.50506f);
                l.cubicTo(58.292816f, 64.24231f, 61.03356f, 62.754475f, 62.666725f, 60.39575f);
                l.cubicTo(63.65426f, 59.0132f, 64.33924f, 57.34967f, 64.5f, 55.985916f);
                l.lineTo(64.5f, 53.661972f);
                l.cubicTo(64.5f, 50.880447f, 64.10773f, 48.281662f, 63.30937f, 45.685608f);
                l.cubicTo(63.229645f, 45.446438f, 63.229645f, 45.446438f, 63.148037f, 45.198215f);
                l.cubicTo(62.94545f, 44.577797f, 62.793026f, 44.06098f, 62.651447f, 43.493267f);
                l.cubicTo(62.0322f, 41.222702f, 61.75352f, 38.65885f, 61.75352f, 35.915493f);
                l.cubicTo(61.75352f, 35.55247f, 61.774376f, 35.083252f, 61.811615f, 34.524635f);
                l.cubicTo(61.826756f, 34.297543f, 61.844357f, 34.059937f, 61.863934f, 33.815243f);
                l.cubicTo(61.904446f, 33.308834f, 61.944916f, 32.87038f, 61.979866f, 32.534348f);
                l.cubicTo(62.06428f, 31.943422f, 61.690876f, 31.5f, 61.140846f, 31.5f);
                l.cubicTo(60.675564f, 31.5f, 59.812183f, 32.01803f, 59.24376f, 32.7508f);
                l.cubicTo(58.297455f, 33.697105f, 57.78169f, 34.986515f, 57.78169f, 36.338028f);
                l.lineTo(57.78169f, 41.619717f);
                l.lineTo(57.770107f, 42.43957f);
                l.cubicTo(57.466965f, 44.86471f, 55.37743f, 46.5f, 52.90141f, 46.5f);
                l.lineTo(24.0f, 46.5f);
                l.cubicTo(23.171574f, 46.5f, 22.5f, 47.171574f, 22.5f, 48.0f);
                l.cubicTo(22.5f, 48.828426f, 23.171574f, 49.5f, 24.0f, 49.5f);
                l.lineTo(37.000446f, 49.5f);
                l.close();
                l.moveTo(24.0f, 52.5f);
                l.cubicTo(21.514719f, 52.5f, 19.5f, 50.485283f, 19.5f, 48.0f);
                l.cubicTo(19.5f, 45.514717f, 21.514719f, 43.5f, 24.0f, 43.5f);
                l.lineTo(52.90141f, 43.5f);
                l.cubicTo(53.934776f, 43.5f, 54.68788f, 42.910614f, 54.78169f, 42.25352f);
                l.lineTo(54.78169f, 36.338028f);
                l.cubicTo(54.78169f, 34.203625f, 55.603954f, 32.147964f, 56.983097f, 30.79014f);
                l.cubicTo(57.936855f, 29.518463f, 59.634296f, 28.5f, 61.140846f, 28.5f);
                l.cubicTo(63.53744f, 28.5f, 65.289444f, 30.5805f, 64.957344f, 32.895733f);
                l.cubicTo(64.93185f, 33.15075f, 64.89309f, 33.570568f, 64.85438f, 34.054478f);
                l.cubicTo(64.83581f, 34.2866f, 64.819176f, 34.511143f, 64.80497f, 34.724194f);
                l.cubicTo(64.77179f, 35.221912f, 64.753525f, 35.632973f, 64.753525f, 35.915493f);
                l.cubicTo(64.753525f, 38.41157f, 65.00428f, 40.718586f, 65.5538f, 42.734787f);
                l.cubicTo(65.684494f, 43.257545f, 65.81763f, 43.708954f, 65.999855f, 44.267014f);
                l.cubicTo(66.0767f, 44.500744f, 66.0767f, 44.500744f, 66.16606f, 44.770138f);
                l.cubicTo(67.06285f, 47.684692f, 67.5f, 50.580822f, 67.5f, 53.661972f);
                l.lineTo(67.49082f, 56.15156f);
                l.cubicTo(67.261185f, 58.2183f, 66.379776f, 60.358868f, 65.12061f, 62.12142f);
                l.cubicTo(62.971745f, 65.22534f, 59.406525f, 67.16074f, 55.225353f, 67.5f);
                l.lineTo(49.69241f, 67.499466f);
                l.cubicTo(46.260185f, 67.40794f, 42.91609f, 65.86839f, 40.432297f, 63.384605f);
                l.cubicTo(39.98215f, 62.934456f, 39.672493f, 62.50868f, 39.07302f, 61.594078f);
                l.cubicTo(37.004364f, 59.11169f, 35.522648f, 56.098976f, 34.600906f, 52.5f);
                l.lineTo(24.0f, 52.5f);
                l.close();
                l.moveTo(34.999554f, 22.5f);
                l.lineTo(34.744797f, 21.31537f);
                l.cubicTo(33.9551f, 17.643284f, 32.588833f, 14.686295f, 30.526573f, 12.198248f);
                l.cubicTo(29.954182f, 11.339663f, 29.70046f, 10.990795f, 29.446383f, 10.736716f);
                l.cubicTo(27.487644f, 8.777979f, 24.86321f, 7.5697494f, 22.267605f, 7.5f);
                l.lineTo(16.89776f, 7.4949393f);
                l.cubicTo(13.707183f, 7.757693f, 10.966437f, 9.245525f, 9.333276f, 11.604252f);
                l.cubicTo(8.345741f, 12.9868f, 7.6607594f, 14.650329f, 7.5f, 16.014084f);
                l.lineTo(7.5f, 18.338028f);
                l.cubicTo(7.5f, 21.119553f, 7.8922696f, 23.718338f, 8.690631f, 26.31439f);
                l.cubicTo(9.018835f, 27.299004f, 9.168899f, 27.78671f, 9.348555f, 28.506733f);
                l.cubicTo(9.967799f, 30.777298f, 10.246479f, 33.34115f, 10.246479f, 36.084507f);
                l.cubicTo(10.246479f, 36.44753f, 10.225625f, 36.916748f, 10.188383f, 37.475365f);
                l.cubicTo(10.173244f, 37.702457f, 10.155643f, 37.940063f, 10.136068f, 38.184757f);
                l.cubicTo(10.095555f, 38.691166f, 10.055082f, 39.12962f, 10.020136f, 39.465652f);
                l.cubicTo(9.935718f, 40.05658f, 10.309125f, 40.5f, 10.859155f, 40.5f);
                l.cubicTo(11.324436f, 40.5f, 12.187818f, 39.98197f, 12.756241f, 39.2492f);
                l.cubicTo(13.702545f, 38.302895f, 14.21831f, 37.013485f, 14.21831f, 35.661972f);
                l.lineTo(14.21831f, 30.380281f);
                l.lineTo(14.229893f, 29.560427f);
                l.cubicTo(14.533035f, 27.135288f, 16.62257f, 25.5f, 19.09859f, 25.5f);
                l.lineTo(48.0f, 25.5f);
                l.cubicTo(48.828426f, 25.5f, 49.5f, 24.828426f, 49.5f, 24.0f);
                l.cubicTo(49.5f, 23.171574f, 48.828426f, 22.5f, 48.0f, 22.5f);
                l.lineTo(34.999554f, 22.5f);
                l.close();
                l.moveTo(48.0f, 19.5f);
                l.cubicTo(50.485283f, 19.5f, 52.5f, 21.514719f, 52.5f, 24.0f);
                l.cubicTo(52.5f, 26.485281f, 50.485283f, 28.5f, 48.0f, 28.5f);
                l.lineTo(19.09859f, 28.5f);
                l.cubicTo(18.065224f, 28.5f, 17.31212f, 29.089386f, 17.21831f, 29.746479f);
                l.lineTo(17.21831f, 35.661972f);
                l.cubicTo(17.21831f, 37.796375f, 16.396046f, 39.852036f, 15.016901f, 41.209858f);
                l.cubicTo(14.063143f, 42.481537f, 12.365705f, 43.5f, 10.859155f, 43.5f);
                l.cubicTo(8.462558f, 43.5f, 6.710557f, 41.4195f, 7.0426555f, 39.104267f);
                l.cubicTo(7.0681567f, 38.84925f, 7.1069093f, 38.429432f, 7.1456223f, 37.945522f);
                l.cubicTo(7.1641917f, 37.7134f, 7.1808248f, 37.488857f, 7.195028f, 37.275806f);
                l.cubicTo(7.2282095f, 36.778088f, 7.246479f, 36.367027f, 7.246479f, 36.084507f);
                l.cubicTo(7.246479f, 33.58843f, 6.9957166f, 31.281416f, 6.4461946f, 29.265211f);
                l.cubicTo(6.2818055f, 28.607655f, 6.1501794f, 28.179869f, 5.833937f, 27.22986f);
                l.cubicTo(4.9371514f, 24.315308f, 4.5f, 21.41918f, 4.5f, 18.338028f);
                l.lineTo(4.5091743f, 15.848437f);
                l.cubicTo(4.738812f, 13.781698f, 5.6202207f, 11.641134f, 6.879388f, 9.878579f);
                l.cubicTo(9.028255f, 6.7746587f, 12.593475f, 4.839254f, 16.774649f, 4.5f);
                l.lineTo(22.30759f, 4.500533f);
                l.cubicTo(25.739817f, 4.592059f, 29.08391f, 6.1316047f, 31.567703f, 8.6153965f);
                l.cubicTo(32.01785f, 9.065543f, 32.327507f, 9.491323f, 32.92698f, 10.405921f);
                l.cubicTo(34.995636f, 12.88831f, 36.477352f, 15.901023f, 37.399094f, 19.5f);
                l.lineTo(48.0f, 19.5f);
                l.close();
                WeChatSVGRenderC2Java.setFillType(l, 1);
                canvas.drawPath(l, a2);
                canvas.restore();
                canvas.save();
                a = C5163c.m7876a(a, looper);
                l = C5163c.m7884l(looper);
                l.moveTo(35.78873f, 51.0f);
                l.cubicTo(36.633804f, 54.929577f, 38.112675f, 58.09859f, 40.225353f, 60.633804f);
                l.cubicTo(40.64789f, 61.267605f, 41.070423f, 61.90141f, 41.492958f, 62.323944f);
                l.cubicTo(43.605633f, 64.43662f, 46.56338f, 65.91549f, 49.732395f, 66.0f);
                l.lineTo(55.225353f, 66.0f);
                l.cubicTo(58.816902f, 65.70422f, 61.985916f, 64.014084f, 63.887325f, 61.267605f);
                l.cubicTo(64.943665f, 59.78873f, 65.788734f, 57.887325f, 66.0f, 55.985916f);
                l.lineTo(66.0f, 53.661972f);
                l.cubicTo(66.0f, 50.704224f, 65.57746f, 47.957745f, 64.73239f, 45.21127f);
                l.cubicTo(64.521126f, 44.577465f, 64.30986f, 43.94366f, 64.098595f, 43.09859f);
                l.cubicTo(63.46479f, 40.774647f, 63.25352f, 38.239437f, 63.25352f, 35.915493f);
                l.cubicTo(63.25352f, 34.859154f, 63.46479f, 32.74648f, 63.46479f, 32.74648f);
                l.cubicTo(63.676056f, 31.267605f, 62.619717f, 30.0f, 61.140846f, 30.0f);
                l.cubicTo(60.084507f, 30.0f, 58.816902f, 30.84507f, 58.183098f, 31.690142f);
                l.cubicTo(56.915493f, 32.957745f, 56.28169f, 34.64789f, 56.28169f, 36.338028f);
                l.lineTo(56.28169f, 42.25352f);
                l.cubicTo(56.070423f, 43.94366f, 54.59155f, 45.0f, 52.90141f, 45.0f);
                l.lineTo(24.0f, 45.0f);
                l.cubicTo(22.343145f, 45.0f, 21.0f, 46.343147f, 21.0f, 48.0f);
                l.cubicTo(21.0f, 49.656853f, 22.343145f, 51.0f, 24.0f, 51.0f);
                l.lineTo(35.78873f, 51.0f);
                l.close();
                l.moveTo(24.0f, 53.1f);
                l.cubicTo(21.183348f, 53.1f, 18.9f, 50.81665f, 18.9f, 48.0f);
                l.cubicTo(18.9f, 45.18335f, 21.183348f, 42.9f, 24.0f, 42.9f);
                l.lineTo(52.90141f, 42.9f);
                l.cubicTo(53.646248f, 42.9f, 54.132065f, 42.519794f, 54.18169f, 42.25352f);
                l.lineTo(54.18169f, 36.338028f);
                l.cubicTo(54.18169f, 34.047047f, 55.065254f, 31.838139f, 56.503098f, 30.430141f);
                l.cubicTo(57.56179f, 29.018549f, 59.42604f, 27.9f, 61.140846f, 27.9f);
                l.cubicTo(63.906757f, 27.9f, 65.93448f, 30.307917f, 65.55437f, 32.955437f);
                l.cubicTo(65.52923f, 33.20682f, 65.49082f, 33.622913f, 65.45247f, 34.102325f);
                l.cubicTo(65.4341f, 34.331932f, 65.417656f, 34.553864f, 65.40364f, 34.764103f);
                l.cubicTo(65.37128f, 35.249645f, 65.35352f, 35.649075f, 65.35352f, 35.915493f);
                l.cubicTo(65.35352f, 38.362114f, 65.5987f, 40.617764f, 66.13589f, 42.589268f);
                l.cubicTo(66.26279f, 43.09686f, 66.39207f, 43.535187f, 66.57021f, 44.080772f);
                l.cubicTo(66.6461f, 44.311607f, 66.6461f, 44.311607f, 66.73953f, 44.59369f);
                l.cubicTo(67.65387f, 47.565296f, 68.1f, 50.520897f, 68.1f, 53.661972f);
                l.lineTo(68.08716f, 56.217823f);
                l.cubicTo(67.84558f, 58.39203f, 66.92488f, 60.628f, 65.61393f, 62.462948f);
                l.cubicTo(63.35938f, 65.71951f, 59.629265f, 67.74443f, 55.225353f, 68.1f);
                l.lineTo(49.676414f, 68.09925f);
                l.cubicTo(46.08486f, 68.00348f, 42.596836f, 66.39767f, 40.008034f, 63.80887f);
                l.cubicTo(39.518673f, 63.319508f, 39.197826f, 62.878345f, 38.612087f, 61.97819f);
                l.cubicTo(36.571465f, 59.529446f, 35.088905f, 56.584694f, 34.138916f, 53.1f);
                l.lineTo(24.0f, 53.1f);
                l.close();
                l.moveTo(36.21127f, 21.0f);
                l.cubicTo(35.366196f, 17.070423f, 33.887325f, 13.901408f, 31.774649f, 11.366198f);
                l.cubicTo(31.352112f, 10.732394f, 30.929577f, 10.098592f, 30.507042f, 9.676056f);
                l.cubicTo(28.394365f, 7.5633802f, 25.436619f, 6.084507f, 22.267605f, 6.0f);
                l.lineTo(16.774649f, 6.0f);
                l.cubicTo(13.183099f, 6.2957745f, 10.014085f, 7.9859157f, 8.112676f, 10.732394f);
                l.cubicTo(7.056338f, 12.211267f, 6.2112675f, 14.112676f, 6.0f, 16.014084f);
                l.lineTo(6.0f, 18.338028f);
                l.cubicTo(6.0f, 21.295774f, 6.4225354f, 24.042253f, 7.267606f, 26.788733f);
                l.cubicTo(7.4788733f, 27.422535f, 7.6901407f, 28.056337f, 7.9014087f, 28.90141f);
                l.cubicTo(8.535212f, 31.225351f, 8.746479f, 33.760563f, 8.746479f, 36.084507f);
                l.cubicTo(8.746479f, 37.140846f, 8.535212f, 39.25352f, 8.535212f, 39.25352f);
                l.cubicTo(8.323944f, 40.732395f, 9.380281f, 42.0f, 10.859155f, 42.0f);
                l.cubicTo(11.915493f, 42.0f, 13.183099f, 41.15493f, 13.816901f, 40.30986f);
                l.cubicTo(15.084507f, 39.042255f, 15.71831f, 37.35211f, 15.71831f, 35.661972f);
                l.lineTo(15.71831f, 29.746479f);
                l.cubicTo(15.929578f, 28.056337f, 17.408451f, 27.0f, 19.09859f, 27.0f);
                l.lineTo(48.0f, 27.0f);
                l.cubicTo(49.656853f, 27.0f, 51.0f, 25.656855f, 51.0f, 24.0f);
                l.cubicTo(51.0f, 22.343145f, 49.656853f, 21.0f, 48.0f, 21.0f);
                l.lineTo(36.21127f, 21.0f);
                l.close();
                l.moveTo(48.0f, 18.9f);
                l.cubicTo(50.81665f, 18.9f, 53.1f, 21.183348f, 53.1f, 24.0f);
                l.cubicTo(53.1f, 26.816652f, 50.81665f, 29.1f, 48.0f, 29.1f);
                l.lineTo(19.09859f, 29.1f);
                l.cubicTo(18.353754f, 29.1f, 17.867937f, 29.480206f, 17.81831f, 29.746479f);
                l.lineTo(17.81831f, 35.661972f);
                l.cubicTo(17.81831f, 37.952953f, 16.934746f, 40.16186f, 15.4969015f, 41.56986f);
                l.cubicTo(14.438208f, 42.98145f, 12.573959f, 44.1f, 10.859155f, 44.1f);
                l.cubicTo(8.093244f, 44.1f, 6.065525f, 41.692085f, 6.445633f, 39.044563f);
                l.cubicTo(6.470772f, 38.79318f, 6.50918f, 38.377087f, 6.547533f, 37.897675f);
                l.cubicTo(6.5659018f, 37.668068f, 6.582341f, 37.446136f, 6.596357f, 37.235897f);
                l.cubicTo(6.6287265f, 36.750355f, 6.6464787f, 36.350925f, 6.6464787f, 36.084507f);
                l.cubicTo(6.6464787f, 33.637886f, 6.4013f, 31.382238f, 5.864109f, 29.410734f);
                l.cubicTo(5.7043867f, 28.771843f, 5.576448f, 28.356043f, 5.26047f, 27.406313f);
                l.cubicTo(4.346128f, 24.434702f, 3.9f, 21.479105f, 3.9f, 18.338028f);
                l.lineTo(3.9128442f, 15.782178f);
                l.cubicTo(4.1544228f, 13.607972f, 5.0751166f, 11.372001f, 6.3860726f, 9.537053f);
                l.cubicTo(8.640619f, 6.2804856f, 12.370734f, 4.255566f, 16.774649f, 3.9f);
                l.lineTo(22.323586f, 3.9007463f);
                l.cubicTo(25.915136f, 3.996521f, 29.403164f, 5.6023297f, 31.991966f, 8.191133f);
                l.cubicTo(32.481327f, 8.680492f, 32.802174f, 9.121655f, 33.387913f, 10.02181f);
                l.cubicTo(35.428535f, 12.470555f, 36.911095f, 15.415307f, 37.861084f, 18.9f);
                l.lineTo(48.0f, 18.9f);
                l.close();
                WeChatSVGRenderC2Java.setFillType(l, 1);
                canvas.drawPath(l, a);
                canvas.restore();
                C5163c.m7882j(looper);
                break;
        }
        return 0;
    }
}
